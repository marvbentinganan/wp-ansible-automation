---
- name: Create WordPress Site
  hosts: "{{ host }}"
  vars_files:
    - "group_vars/forge.yaml"
    - "group_vars/site.yaml"
    - "group_vars/default.yaml"
  pre_tasks:
    - name: Generate Token
      include_tasks: "tasks/create_token.yaml"
      when: logTask == 'true'
  tasks:
    - set_fact:
        newSite: "true"
        env: "production"

    - name: Check if Site Exists
      uri:
        url: "{{ forgeBaseUri }}/servers/{{ serverID }}/sites"
        method: GET
        headers:
            Authorization: "{{ forgeApiToken }}"
            Accept: "application/json"
            Content-Type: "application/json"
        return_content: yes
        force_basic_auth: yes
      register: forgeSites

    - name: Send to Webhook
      uri:
        url: "{{ wc_api_endpoint }}/api/playbooks/webhook"
        method: POST
        headers:
            Authorization: "{{ accessToken }}"
            Accept: "application/json"
            Content-Type: "application/json"
        body:
            playbook_id: "{{ playbookID | default('') }}"
            playbook_log_id: "{{ playbookLogID | default('') }}"
            domain_id: "{{ domainID | default('') }}"
            host: "{{ host }}"
            source: "{{ source | default('')}}"
            playbook_step_id: 1
            status: 200
        body_format: json
        return_content: yes
        force_basic_auth: yes
      when: logTask == 'true'
      delegate_to: localhost

    - set_fact:
        siteExists: true
      when: fullUrl == item.name
      with_items: "{{ forgeSites.json.sites }}"
      loop_control:
        label: "{{ item.name }}"

    - name: Create Site from Git Repository
      block:    
        - name: Create Site from Git Repository
          include_tasks: "tasks/create_git_site.yaml"

        - name: Send a success email for Git Deployment
          mail:
            host: smtp.iation.net
            port: 1025
            username: iation
            password: iation
            secure: never
            from: marvin.bentinganan@iation.com (Marvin Bentinganan)
            to: iation Support <support@iation.com>
            subject: Your new Site is Ready
            body: |
              We deployed a your new Website and you can view it here: https://{{ fullUrl }}
      when: gitRepository != ''
      
    - name: Create Wordpress Site
      block:
        - name: Generate a Password for the WordPress Admin User
          shell:
            cmd: "pwgen -s -1 16"
          register: adminPassword

        - name: Create WordPress Database
          include_tasks: "tasks/create_wp_database.yaml"  

        - name: Install WordPress Site
          include_tasks: "tasks/create_wp_site.yaml"  

        - name: Configure WordPress Site
          become: yes
          become_user: "{{ isolatedUser }}"
          shell: 
            cmd: wp core install --title={{ domain }} --admin_user={{ adminUser }} --admin_password={{ adminPassword.stdout }} --admin_email={{ adminEmail }} --url={{ fullUrl }}
            chdir: "/home/{{ isolatedUser }}/{{ fullUrl }}/public/"
          args:
            executable: /bin/bash
            
        - name: Optimize WordPress Site
          include_tasks: "tasks/optimize_wp_site.yaml"

        - name: Send a success email for WordPress Site
          mail:
            host: smtp.iation.net
            port: 1025
            username: iation
            password: iation
            secure: never
            from: marvin.bentinganan@iation.com (Marvin Bentinganan)
            to: iation Support <support@iation.com>
            subject: Your new Site is Ready
            body: |
              We deployed a your new Website and you can view it here: https://{{ fullUrl }}
              Please save the following credentials:
              Database User: {{ databaseUser }}
              Database Password: {{ databasePassword.stdout }}
              Admin Username: {{ adminUser }}
              Admin Password: {{ adminPassword.stdout }}
      when: gitRepository == ''

    - name: Obtain an SSL Certificate
      block:
        - name: Generate SSL Certificate
          uri:
            url: "{{ forgeBaseUri }}/servers/{{ serverID }}/sites/{{ forgeSite.json.site.id }}/certificates/letsencrypt"
            method: POST
            headers:
                Authorization: "{{ forgeApiToken }}"
                Accept: "application/json"
                Content-Type: "application/json"
            body:
                domains: ["{{ fullUrl }}"]
            body_format: json
            return_content: yes
            force_basic_auth: yes
      when: setupSSL == 'true' and siteExists == false

    - name: Add Security Rules
      block:
        - name: Add Basic Auth
          uri:
            url: "{{ forgeBaseUri }}/servers/{{ serverID }}/sites/{{ forgeSite.json.site.id }}/security-rules"
            method: POST
            headers:
              Authorization: "{{ forgeApiToken }}"
              Accept: "application/json"
              Content-Type: "application/json"
            body:
              name: "Restricted Access"
              path: null
              credentials: [{
                username: "{{ secureUsername }}",
                password: "{{ securePassword }}" 
              }]
            body_format: json
            return_content: yes
            force_basic_auth: yes
      when: secureSite == 'true' and siteExists == false

    - debug:
        msg:
          - "Installation and Configuration still in progress..."
          - "You can check it by opening this link: https://{{ fullUrl }} afterwards."